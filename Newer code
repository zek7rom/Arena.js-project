

/*
 * Step 1: Once the user joins the game, there will be a pop-up alert telling he or she to pick either charmander, squirtle or bulbasaur.
 * Step 2: Now that he or she has chosen their pokemon they will be a pop-up alert telling user he or she has successfully chosen a mon/and now they will be placed in floor 1.
 * Step 3: Now that user is in floor 1 he or she will battle a pokemon; floor 1-5 will probably has pokemon from the lvl 1 to 7 range; If they win the battle he or she will move on to floor 2.
 * Step 4: this process will continue until they reach floor 15; Floor 15 is the max floor for now, since this is a newly developed game, and i'm still new to javascript so this will be slappy.
 * Step 5: I didn't mention but as your pokemon continues to battle they will level up; maxLVL === null as i don't yet know the max level, it will probably be level 20.
 */
   
'use strict';

let buffer = 'You have successfully chosen ';
let choices = ['charmander', 'bulbasaur', 'squirtle', 'torchic', 'treecko', 'mudkip', 'pikachu'];

let playerChoice = prompt('Choose one of these Pokemon: ' + choices.join(', ') + '.');

if (choices.indexOf(playerChoice) < 0) {
    // The Pokemon that was selected was not in the specified choices.
    // However, we can be lazy and just assign a default Pokemon to playerChoice.
    playerChoice = 'pikachu';
    alert('Pokemon not found; defaulting to Pikachu instead...');
}

buffer += playerChoice + '.';
alert(buffer);
   
    
 class Pokemon { 
    constructor(healthpoints, name, type, level, gender, stats, moves) {
        this.healthpoints = healthpoints;
        this.name = name;
        this.type = type;
        
        this.level = level; //You could set this to 1
        if (this.level > 100) this.level = 100; // Make sure that the Pokemon's level cannot be set over 100
        
        this.gender = gender;
        this.exp = 0;
        this.stats = stats;
        this.moves = moves;
    }
     
    checkLevelUp() {
        //write function here, uh what? im a bit lost
        //this.level; //works here already cause its a class
        if (this.level > 99) return false; //Pokemon is level 100 and cannot level up
        //Write your checks here then if it can level up
         
        return true;
         
    }
    
    onLevelUp() {
        this.level++;
        for (let key in this.stats) {
            this.stats[key] += Math.floor(Math.random() * 3); // This allows some stats to raise by 2 or 3, like it does in the games (however, not based on nature/IVs/EVs)
        }
    }
}
 
let Ember = { 
    damage: '65',
    type: 'fire',
    physspec: 'physical move',
    id: 'ember', 
};

let Scratch = {
    damage: '45',
    type: 'normal',
    physspec: 'special move',
    id: 'scratch', 
};

let charmander = { moveset: [Ember, Scratch] };//how do u think like that lol

let Charmander = new Pokemon(30, 'Charmander', ['Fire'], 1, 'Male', {atk: '35', def: '40', spa: '55', spD: '50', spe: '64'}); //change the 1 to what level you want
if (Charmander.checkLevelUp()) {
    Charmander.level++;
    alert(Charmander.name + ' leveled up to level ' + Charmander.level + '!');//????????? what the hell is that? // Read the js and try to figure it out//kk
}

if(charmander.checkLevelUp())
   charmander.onLevelUp();//could i also add
  //to state charmanders stats will increase by one each time? //This wont work, stats is an object remember? also the increase handler is in onLevelUp()//oh ok
   alert(charmander.name + 'stats have increased to' + charmander.stats + '.');
    

if (charmander.level === 15) {
    alert(charmander.name + ' Has evolved into charmeleon and is ' + charmander.level + '!');//btw would this work  //change its name too so it dosent say charmander in the future
}

if (charmander.level === 2) {
charmander.moves = [ 'ember', 'scratch' ];

} else if (charmander.level === 3)
alert(charmander.name + 'has unlocked flame wheel and is now' + charmander.level + '.');

    



//this is for squirtle 
let Bubble = {
    damage: '55',
    type: 'water',
    physspec: 'special move',
    id: 'bubble',
};
    
let Tackle = {
   damage: '65',
   type: 'normal',
   physspec: 'physical move',
   id: 'tackle',
};
    
let squirtle = { moveset: [Bubble, Tackle] };

let Squirtle = new Pokemon(45, 'Squirtle', ['Water'], 1, 'Male');
if(Squirtle.checkLevelUp()) {
    Squirtle.level++;
    alert(Squirtle.name + 'leveled up to level' + Squirtle.level + '!');
}
